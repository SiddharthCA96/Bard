// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String
  bankAccounts BankAccount[]
}
model Bank {
  id Int @id @default(autoincrement())
  name  String @unique
  bankAccount BankAccount[]
}
model BankAccount {
  id Int @id @default(autoincrement())
  accountNumber String @unique
  userId Int
  user User @relation(fields: [userId],references: [id])
  bankId Int 
  balance     Decimal   @default(500.00)
  bank Bank @relation(fields: [bankId],references: [id])
  transactions BankTransaction[]
}
model BankTransaction {
  id Int @id @default(autoincrement())
  transactionId String    @unique
  amount        Decimal
  type          TransactionType
  status        TransactionStatus
  createdAt     DateTime  @default(now())
  account       BankAccount @relation(fields: [accountId], references: [id])
  accountId     Int
}
enum TransactionType {
  TRANSFER_TO_BANK
  TRANSFER_TO_WALLET
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}